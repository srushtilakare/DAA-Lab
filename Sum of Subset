#include <iostream>
using namespace std;

bool isSubsetSum(int set[], int n, int sum) {
    bool dp[n + 1][sum + 1];


    for (int i = 0; i <= n; i++) {
        dp[i][0] = true;  
    }
    for (int j = 1; j <= sum; j++) {
        dp[0][j] = false;  
    }

    
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= sum; j++) {
            if (set[i - 1] <= j) {
                dp[i][j] = dp[i - 1][j] || dp[i - 1][j - set[i - 1]];
            } else {
                dp[i][j] = dp[i - 1][j];
            }
        }
    }

    return dp[n][sum];
}

int main() {
    int n, sum;

    
    cout << "Enter the number of elements in the set: ";
    cin >> n;

    int set[n];

     
    cout << "Enter the elements of the set: ";
    for (int i = 0; i < n; i++) {
        cin >> set[i];
    }

     
    cout << "Enter the sum to check for: ";
    cin >> sum;

    
    if (isSubsetSum(set, n, sum)) {
        cout << "True" << endl;
    } else {
        cout << "False" << endl;
    }

    return 0;
}
